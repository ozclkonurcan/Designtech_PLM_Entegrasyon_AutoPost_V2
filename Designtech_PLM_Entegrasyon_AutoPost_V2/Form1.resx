<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>202, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AH//AAH//8AD///wD////D////////////8=
</value>
  </data>
</root>